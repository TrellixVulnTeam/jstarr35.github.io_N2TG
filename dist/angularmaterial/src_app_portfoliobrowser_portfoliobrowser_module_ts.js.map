{"version":3,"sources":["./src/app/portfoliobrowser/components/main-content/main-content.component.html","./src/app/portfoliobrowser/components/main-content/main-content.component.ts","./src/app/portfoliobrowser/components/sidenav/sidenav.component.ts","./src/app/portfoliobrowser/components/sidenav/sidenav.component.html","./src/app/portfoliobrowser/components/toolbar/toolbar.component.ts","./src/app/portfoliobrowser/components/toolbar/toolbar.component.html","./src/app/portfoliobrowser/portfoliobrowser-app.component.ts","./src/app/portfoliobrowser/portfoliobrowser.module.ts","./src/app/portfoliobrowser/services/project.service.ts"],"names":[],"mappings":"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","file":"src_app_portfoliobrowser_portfoliobrowser_module_ts.js","sourcesContent":["<div *ngIf=\"!project\">\n  <mat-spinner></mat-spinner>\n</div>\n<div *ngIf=\"project\">\n  <div class=\"project-container\">\n    <div class=\"project-header\">\n      <h1>{{project.name}}</h1>\n    </div>\n    <mat-divider></mat-divider>\n    <div class=\"project-content\">\n      <div class=\"project-description col-6\">\n        <p>\n          {{project.description}}\n        </p>\n      </div>\n      <div class=\"project-media col-6\">\n        <img src={{project.cover}}>\n      </div>\n    </div>\n  <mat-tab-group mat-stretch-tabs headerPosition=\"below\" class=\"mat-elevation-z4 project-container\">\n    <mat-tab label=\"Overview\">\n      <ng-template matTabContent>\n      <mat-card class=\"project-card\">\n        <mat-card-header>\n          <div mat-card-avatar class=\"prjoect-header-image\"></div>\n          <mat-card-title>{{ project.name }}</mat-card-title>\n          <mat-card-subtitle>{{project.type}}</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image src={{project.cover}}>\n        <mat-card-content>\n          <p>\n            {{ project.description }}\n          </p>\n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-button>LIKE</button>\n          <button mat-button>SHARE</button>\n        </mat-card-actions>\n      </mat-card>\n    </ng-template>\n    </mat-tab>\n\n    <mat-tab label=\"Tech Stack\">\n\n    </mat-tab>\n    <mat-tab label=\"Contribution\">\n\n    </mat-tab>\n  </mat-tab-group>\n</div>\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Project } from '../../models/project';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectService } from '../../services/project.service';\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['./main-content.component.scss']\n})\nexport class MainContentComponent implements OnInit {\n\n  project: Project;\n  constructor(\n    private route: ActivatedRoute,\n    private service: ProjectService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      let id = params['id'];\n      if (!id) id = 1;\n      this.project = null;\n\n     /*  this.service.loadAll().subscribe(\n        (data) => {\n          this.project = data[0]\n        }\n      ) */\n\n      this.service.projects.subscribe(projects => {\n        if (projects.length == 0) return;\n\n        setTimeout(() => {\n          this.project = this.service.projectById(id);\n        }, 500)\n\n      });\n\n    })\n  }\n\n}\n","import { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Project } from '../../models/project';\nimport { ProjectService } from '../../services/project.service';\n\n\nconst SMALL_WIDTH_BREAKPOINT = 720;\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n  public isScreenSmall: boolean;\n\n  projects: Observable<Project[]>;\n  isDarkTheme: boolean = false;\n  dir: string = 'ltr';\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private projectService: ProjectService,\n     private router: Router) { }\n\n  @ViewChild(MatSidenav)\n  sidenav!: MatSidenav;\n\n  toggleTheme() {\n    this.isDarkTheme = !this.isDarkTheme;\n  }\n\n  toggleDir() {\n    this.dir = this.dir == 'ltr' ? 'rtl' : 'ltr';\n  }\n\n  ngOnInit(): void {\n    this.breakpointObserver\n    .observe([`(max-width: ${SMALL_WIDTH_BREAKPOINT}px)`]).subscribe((state: BreakpointState) => {\n      this.isScreenSmall = state.matches;\n    });\n\n    this.projects = this.projectService.projects;\n    this.projectService.loadAll();\n    this.router.events.subscribe(() => {\n      if (this.isScreenSmall) {\n        this.sidenav.close();\n      }\n    });\n  }\n\n}\n","<mat-sidenav-container\n  class=\"app-sidenav-container\"\n  [class.dark-theme]=\"isDarkTheme\"\n  [dir]=\"dir\"\n>\n  <mat-sidenav\n    #sidenav\n    class=\"app-sidenav mat-elevation-z10\"\n    [opened]=\"!isScreenSmall\"\n    [mode]=\"isScreenSmall ? 'over' : 'side'\"\n  >\n    <mat-toolbar color=\"primary\"> Projects </mat-toolbar>\n    <mat-nav-list>\n      <mat-list-item *ngFor=\"let project of projects | async\">\n        <a matLine [routerLink]=\"['/portfoliobrowser', project.id]\">\n          {{ project.name }}\n        </a>\n      </mat-list-item>\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <div class=\"app-sidenav-content\">\n    <app-toolbar\n      (toggleSidenav)=\"sidenav.toggle()\"\n      (toggleSidenav)=\"sidenav.toggle()\"\n      (toggleDir)=\"toggleDir()\"\n    >\n    </app-toolbar>\n    <div class=\"wrapper\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</mat-sidenav-container>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n// import { NewContactDialogComponent } from '../new-contact-dialog/new-contact-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  @Output() toggleSidenav = new EventEmitter<void>();\r\n  @Output() toggleTheme = new EventEmitter<void>();\r\n  @Output() toggleDir = new EventEmitter<void>();\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openAddContactDialog(): void {\r\n    /*  let dialogRef = this.dialog.open(NewContactDialogComponent, {\r\n      width: '450px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed', result)\r\n\r\n      if (result) {\r\n        this.openSnackBar(\"Contact added\", \"Navigate\")\r\n          .onAction().subscribe(() => {\r\n              this.router.navigate(['/contactmanager', result.id]);\r\n          });\r\n      }\r\n    }) */\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) : MatSnackBarRef<SimpleSnackBar> {\r\n    return this.snackBar.open(message, action, {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n\r\n  <button mat-button class=\"sidenav-toggle\" (click)=\"toggleSidenav.emit()\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n\r\n  <span>Portfolio</span>\r\n\r\n  <span class=\"example-spacer\"></span>\r\n\r\n  <button mat-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item (click)=\"openAddContactDialog()\">New Contact</button>\r\n    <button mat-menu-item (click)=\"toggleTheme.emit()\">Toggle theme</button>\r\n    <button mat-menu-item (click)=\"toggleDir.emit()\">Toggle dir</button>\r\n  </mat-menu>\r\n\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-portfoliobrowser-app',\n  template: `\n   <app-sidenav></app-sidenav>\n  `,\n  styles: [\n  ]\n})\nexport class PortfoliobrowserAppComponent implements OnInit {\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/avatars.svg'))\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MaterialModule } from '../shared/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { PortfoliobrowserAppComponent } from './portfoliobrowser-app.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { MainContentComponent } from './components/main-content/main-content.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProjectService } from './services/project.service';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: PortfoliobrowserAppComponent,\n    children: [\n      { path: ':id', component: MainContentComponent },\n      { path: '', component: MainContentComponent}\n  ]\n},\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  declarations: [\n    PortfoliobrowserAppComponent,\n    ToolbarComponent,\n    MainContentComponent,\n    SidenavComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    MaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [ProjectService]\n})\nexport class PortfoliobrowserModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Project } from '../models/project';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n\r\n  private _projects: BehaviorSubject<Project[]>;\r\n\r\n  private dataStore: {\r\n    projects: Project[];\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.dataStore = { projects: [ ] };\r\n    this._projects = new BehaviorSubject<Project[]>([]);\r\n  }\r\n\r\n  get projects(): Observable<Project[]> {\r\n    return this._projects.asObservable();\r\n  }\r\n\r\n  projectById(id: number) {\r\n    return this.dataStore.projects.find(x => x.id == id);\r\n  }\r\n\r\n/*   projectData = `[\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"HerdOne\",\r\n      \"type\": \"ASP.NET\",\r\n      \"description\": \"Livestock management application created with ASP.NET Web Forms. Using Bootstrap themes and components, HerdOne offers a clean, data-driven UI.\",\r\n      \"link\": \"https://herdone.com\",\r\n      \"assets\": []\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"HerdOne for Android\",\r\n      \"type\": \"Android\",\r\n      \"description\": \"A scaled down version of HerdOne.com that allowed users to access their data and perform primary functions on their mobile device. The apps offline first design allows users to use the app even when in the field where a reliable network connection is not always available.\",\r\n      \"link\": \"\",\r\n      \"assets\": [\"../assets/hoa.gif\"]\r\n    }\r\n  ]\r\n  ` */\r\n\r\n  loadAll() {\r\n    const projectsUrl = 'http://localhost:3000/projects'\r\n\r\n   //  this.dataStore.projects = JSON.parse(this.projectData);\r\n    // return this._projects.next(Object.assign({}, this.dataStore).projects);\r\n    // return this.http.get('db.json').map(\r\n    //   (Reponse)=>Reponse.json()\r\n    // )\r\n    return this.http.get<Project[]>('app/portfoliobrowser/services/db.json')\r\n      .subscribe(data => {\r\n        this.dataStore.projects = data;\r\n        this._projects.next(Object.assign({}, this.dataStore).projects);\r\n      }, error => {\r\n        console.log(\"Failed to fetch users\")\r\n      });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}