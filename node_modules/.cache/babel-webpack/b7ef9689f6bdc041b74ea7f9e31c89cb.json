{"ast":null,"code":"import { MatSidenav } from '@angular/material/sidenav';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"../../services/projectservice\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"@angular/material/toolbar\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../toolbar/toolbar.component\";\nimport * as i9 from \"@angular/material/core\";\n\nconst _c0 = function (a1) {\n  return [\"/portfoliobrowser\", a1];\n};\n\nfunction SidenavComponent_mat_list_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelement(1, \"a\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const project_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(1, _c0, project_r2.id));\n  }\n}\n\nconst SMALL_WIDTH_BREAKPOINT = 720;\nexport class SidenavComponent {\n  constructor(breakpointObserver, projectService, router) {\n    this.breakpointObserver = breakpointObserver;\n    this.projectService = projectService;\n    this.router = router;\n    this.isScreenSmall = false;\n  }\n\n  ngOnInit() {\n    this.breakpointObserver.observe([`(max-width: ${SMALL_WIDTH_BREAKPOINT}px)`]).subscribe(state => {\n      this.isScreenSmall = state.matches;\n    });\n    this.projects = this.projectService.projects;\n    this.projectService.loadAll();\n    this.router.events.subscribe(() => {\n      if (this.isScreenSmall) {\n        this.sidenav.close();\n      }\n    });\n  }\n\n}\n\nSidenavComponent.ɵfac = function SidenavComponent_Factory(t) {\n  return new (t || SidenavComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.projectService), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nSidenavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SidenavComponent,\n  selectors: [[\"app-sidenav\"]],\n  viewQuery: function SidenavComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatSidenav, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);\n    }\n  },\n  decls: 12,\n  vars: 5,\n  consts: [[1, \"app-sidenav-container\"], [1, \"app-sidenav\", \"mat-elevation-z10\", 3, \"opened\", \"mode\"], [\"sidenav\", \"\"], [\"color\", \"primary\"], [4, \"ngFor\", \"ngForOf\"], [1, \"app-sidenav-content\"], [3, \"toggleSidenav\"], [1, \"wrapper\"], [\"matLine\", \"\", 3, \"routerLink\"]],\n  template: function SidenavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0);\n      i0.ɵɵelementStart(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵelementStart(3, \"mat-toolbar\", 3);\n      i0.ɵɵtext(4, \" Projects \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-nav-list\");\n      i0.ɵɵtemplate(6, SidenavComponent_mat_list_item_6_Template, 2, 3, \"mat-list-item\", 4);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5);\n      i0.ɵɵelementStart(9, \"app-toolbar\", 6);\n      i0.ɵɵlistener(\"toggleSidenav\", function SidenavComponent_Template_app_toolbar_toggleSidenav_9_listener() {\n        i0.ɵɵrestoreView(_r3);\n\n        const _r0 = i0.ɵɵreference(2);\n\n        return _r0.toggle();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"router-outlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"opened\", !ctx.isScreenSmall)(\"mode\", ctx.isScreenSmall ? \"over\" : \"side\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 3, ctx.projects));\n    }\n  },\n  directives: [i4.MatSidenavContainer, i4.MatSidenav, i5.MatToolbar, i6.MatNavList, i7.NgForOf, i8.ToolbarComponent, i3.RouterOutlet, i6.MatListItem, i3.RouterLinkWithHref, i9.MatLine],\n  pipes: [i7.AsyncPipe],\n  styles: [\".app-sidenav-container[_ngcontent-%COMP%] {\\n  flex: 1;\\n  width: 100%;\\n  min-width: 100%;\\n  height: 100%;\\n  min-height: 100%;\\n}\\n\\n.app-sidenav-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n}\\n\\n.app-sidenav[_ngcontent-%COMP%] {\\n  width: 240px;\\n}\\n\\n.wrapper[_ngcontent-%COMP%] {\\n  margin: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGVuYXYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxPQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxZQUFBO0VBRUEsc0JBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7QUFBRjs7QUFHQTtFQUNJLFlBQUE7QUFBSiIsImZpbGUiOiJzaWRlbmF2LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFwcC1zaWRlbmF2LWNvbnRhaW5lciB7XHJcbiAgZmxleDogMTtcclxuICB3aWR0aDogMTAwJTtcclxuICBtaW4td2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG1pbi1oZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5hcHAtc2lkZW5hdi1jb250ZW50IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLmFwcC1zaWRlbmF2IHtcclxuICB3aWR0aDogMjQwcHg7XHJcbn1cclxuXHJcbi53cmFwcGVyIHtcclxuICAgIG1hcmdpbjogNTBweDtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\jason\\Documents\\angular\\angularmaterial\\src\\app\\portfoliobrowser\\components\\sidenav\\sidenav.component.ts","C:\\Users\\jason\\Documents\\angular\\angularmaterial\\src\\app\\portfoliobrowser\\components\\sidenav\\sidenav.component.html"],"names":[],"mappings":"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","sourcesContent":["import { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { Project } from '../../models/project';\nimport { projectService } from '../../services/projectservice';\n\n\nconst SMALL_WIDTH_BREAKPOINT = 720;\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n  projects: Observable<Project[]> | undefined;\n\n  public isScreenSmall: boolean = false;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private projectService: projectService,\n     private router: Router) { }\n\n  @ViewChild(MatSidenav)\n  sidenav!: MatSidenav;\n\n\n  ngOnInit(): void {\n    this.breakpointObserver\n    .observe([`(max-width: ${SMALL_WIDTH_BREAKPOINT}px)`]).subscribe((state: BreakpointState) => {\n      this.isScreenSmall = state.matches;\n    });\n\n    this.projects = this.projectService.projects;\n    this.projectService.loadAll();\n    this.router.events.subscribe(() => {\n      if (this.isScreenSmall) {\n        this.sidenav.close();\n      }\n    });\n  }\n\n}\n","\n<mat-sidenav-container class=\"app-sidenav-container\">\n  <mat-sidenav #sidenav class=\"app-sidenav mat-elevation-z10\" [opened]=\"!isScreenSmall\"\n    [mode]=\"isScreenSmall ? 'over' : 'side'\">\n    <mat-toolbar color=\"primary\">\n      Projects\n    </mat-toolbar>\n    <mat-nav-list>\n      <mat-list-item *ngFor=\"let project of projects | async\">\n        <a matLine [routerLink]=\"['/portfoliobrowser', project.id]\">\n\n        </a>\n      </mat-list-item>\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <div class=\"app-sidenav-content\">\n    <app-toolbar (toggleSidenav)=\"sidenav.toggle()\"></app-toolbar>\n    <div class=\"wrapper\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n\n</mat-sidenav-container>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}